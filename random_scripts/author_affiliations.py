#%%
names = [
    "Zheng, Da",
    "Mhembere, Disa",
    "Lyzinski, Vince",
    "Priebe, Carey E",
    "Burns, Randal",
    "Wang, Qing",
    "Zhang, Ming",
    "Tomita, Tyler",
    "Zhou, Shibin",
    "Papadopoulos, Nickolas",
    "Kinzler, Kenneth W",
    "Vogelstein, Bert",
    "Simhal, Anish K",
    "Aguerrebere, Cecilia",
    "Collman, Forrest",
    "Micheva, Kristina D",
    "Weinberg, Richard J",
    "Smith, Stephen J",
    "Sapiro, Guillermo",
    "Shen, Cencheng",
    "Hildebrand, David Grant Colburn",
    "Cicconet, Marcelo",
    "Torres, Russel Miguel",
    "Choi, Woohyuk",
    "Quan, Tran Minh",
    "Moon, Jungmin",
    "Wetzel, Arthur Willis",
    "Champion, Andrew Scott",
    "Graham, Brett Jesse",
    "Randlett, Owen",
    "Plummer, George Scott",
    "Portugues, Ruben",
    "Bianco, Isaac Henry",
    "Saalfield, Stephan",
    "Baden, Alexander David",
    "Lillaney, Kunal",
    "Burns, Randal",
    "Schier, Alexander Franz",
    "Lee, Wei-Chung Allen",
    "Jeong, Won-Ki",
    "Lichtman, Jeff William",
    "Engert, Florian",
    "Durante, Daniele",
    "Dunson, David B",
    "Binkiewicz, Norbert",
    "Rohe, Karl",
    "Chen, Saojie",
    "Liu, Kai",
    "Yang, Yuguang",
    "Xu, Yuting",
    "Lee, Seonjoo",
    "Lindquist, Martin",
    "Caffo, Brian S",
    "Kiar, Gregory",
    "Gorgolewski, Krzysztof J",
    "Kleissas, Dean",
    "Roncal, William Gray",
    "Litt, Brian",
    "Wandell, Brian",
    "Poldrack, Russel A",
    "Wiener, Martin",
    "Cohen, Joshua D",
    "Li, Lu",
    "Wang, Xuxuan",
    "Thoburn, Christopher",
    "Afsari, Bahman",
    "Danilova, Ludmila",
    "Douville, Christopher",
    "Javed, Ammar A",
    "Wong, Fay",
    "Mattox, Austin",
    "Ralph, Hruban H",
    "Wolfgang, Christopher L",
    "Goggins, Michael G",
    "Molin, Marco Dal",
    "Wang, Tian-Li",
    "Roden, Richard",
    "Klein, Alison P",
    "Ptak, Janine",
    "Dobbyn, Lisa",
    "Schaefer, Joy",
    "Silliman, Natalie",
    "Popoli, Maria",
    "Browne, James D",
    "Schoen, Robert E",
    "Brand, Randall E",
    "Tie, Jeanne",
    "Gibbs, Peter",
    "Wong, Hui-Li",
    "Mansfield, Aaron S",
    "Jen, Jin",
    "Hanash, Samir M",
    "Falconi, Massimo",
    "Allen, Peter J",
    "Zhou, Shibin",
    "Bettegowda, Chetan",
    "Diaz, Luis A",
    "Tomasetti, Cristian",
    "Kinzler, Kenneth W",
    "Lennon, Anne M",
    "Papadopoulos, Nickolas",
    "Athreya, Avanti",
    "Fishkind, Donniell E",
    "Tang, Minh",
    "Park, Youngser",
    "Levin, Keith",
    "Lyzinski, Vince",
    "Qin, Yichen",
    "Sussman, Daniel L",
    "Lee, Youjin",
    "Shen, Cencheng",
    "Priebe, Carey E",
    "Perlman, Eric",
    "Falk, Benjamin",
    "Baden, Alex",
    "Roncal, William Gray",
    "Chandrashekhar, Vikram",
    "Collman, Forrest",
    "Seshamani, Sharmishtaa",
    "Patsolic, Jesse L",
    "Lillaney, Kunal",
    "Kazhdan, Michael",
    "Hider, Robert",
    "Pryor, Derek",
    "Matelsky, Jordan",
    "Gion, Timothy",
    "Manavalan, Priya",
    "Wester, Brock",
    "Chevillet, Mark",
    "Trautman, Eric T",
    "Khairy, Khaled",
    "Bridgeford, Eric",
    "Kleissas, Dean M",
    "Tward, Daniel J",
    "Crow, Ailey K",
    "Hsueh, Brian",
    "Wright, Matthew A",
    "Miller, Michael I",
    "Smith, Stephen J",
    "Deisseroth, Karl",
    "Burns, Randal",
    "Tang, Runze",
    "Ketcha, Michael",
    "Badea, Alexandra",
    "Calabrese, Evan D",
    "Margulies, Daniel S",
    "Sussman, Daniel L",
    "Wang, Qing",
    "Maggioni, Mauro",
    "Shen, Cencheng",
    "Son, Jake J",
    "Clucas, Jon C",
    "White, Curt",
    "Krishnakumar, Anirudh",
    "Klein, Arno",
    "Conroy, John M",
    "Lyzinski, Vince",
    "Tang, Minh",
    "Athreya, Avanti",
    "Cape, Joshua",
    "Bridgeford, Eric",
    "Pedigo, Benjamin D",
    "Chung, Jaewon",
    "Levin, Keith",
    "Mensh, Brett",
]


#%%
import random
import scholarly


def return_affiliation_dict(names):
    out = dict()
    for person in names:
        try:
            query = scholarly.search_author(person)
            author = next(query).fill()
            affiliation = author.affiliation
            out[person] = affiliation
        except:
            out[person] = None
            continue
    return out


#%%
names_and_affiliations = return_affiliation_dict(names)
names_and_affiliations
